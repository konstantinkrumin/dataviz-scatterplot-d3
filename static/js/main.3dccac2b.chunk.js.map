{"version":3,"sources":["helpers/fetchData.js","helpers/chart.js","App.js","index.js"],"names":["useFetch","url","useState","data","setData","loading","setLoading","timeParse","dataset","forEach","d","parsedTime","Time","split","Date","a","fetch","response","json","useEffect","fetchUrl","render","ref","width","height","svg","d3","current","xValue","Year","yValue","dopingValue","Doping","margin","innerWidth","innerHeight","titleXAxisPos","legendXAxisTextPos","legendYAxisTextOnePos","legendYAxisTextTwoPos","legendXAxisSquaresPos","legendYAxisSquareOnePos","legendYAxisSquareTwoPos","scatterplot","append","attr","xScale","domain","range","yScale","xAxis","tickFormat","setFullYear","tickSizeOuter","yAxis","call","text","titleSection","titleYAxisPos","legendGrouping","tooltip","style","selectAll","enter","on","transition","duration","html","Name","nameValue","Nationality","nationalityValue","timeValue","pageX","pageY","App","useRef","length","className","viewBox","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3dccac2b.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction useFetch(url) {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  function timeParse(dataset) {\r\n    dataset.forEach(d => {\r\n      let parsedTime = d.Time.split(\":\");\r\n      d.Time = new Date(1970, 0, 1, 0, parsedTime[0], parsedTime[1]);\r\n    });\r\n\r\n    return dataset;\r\n  }\r\n\r\n  async function fetchUrl() {\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n    const dataset = await timeParse(json);\r\n    setData(dataset);\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchUrl();\r\n  }, []);\r\n  return [data, loading];\r\n}\r\nexport { useFetch };\r\n","import * as d3 from \"d3\";\r\n\r\nconst render = (dataset, ref, width, height) => {\r\n  const svg = d3.select(ref.current);\r\n\r\n  const xValue = (d) => d.Year; // Year\r\n  const yValue = (d) => d.Time; // Time formatted as Date object\r\n  const timeValue = (d) => d3.timeFormat(\"%M:%S\")(d.Time); // Time strings used in the tooltips\r\n  const nameValue = (d) => d.Name;\r\n  const nationalityValue = (d) => d.Nationality;\r\n  const dopingValue = (d) => d.Doping; // Details of doping allegations\r\n\r\n  const radius = 8;\r\n  // Initiate the svg sizing for the visualization\r\n  const margin = { top: 50, right: 60, bottom: 50, left: 80 };\r\n  const innerWidth = width - margin.left - margin.right;\r\n  const innerHeight = height - margin.top - margin.bottom;\r\n\r\n  const xAxisPadding = 1;\r\n\r\n  // Create and position axes text labels and the title\r\n  const titleText = \"Doping in Professional Bicycle Racing\";\r\n  const titleXAxisPos = innerWidth / 2;\r\n  const titleYAxisPos = -10;\r\n\r\n  const subtitleText = \"35 Fastest times up Alpe d'Huez\";\r\n  const subtitleYAxisPos = titleYAxisPos + 22;\r\n\r\n  const yAxisLabelText = \"Time in Minutes\";\r\n  const yAxisLabelXPos = -50;\r\n  const yAxisLabelYPos = -50;\r\n\r\n  // Calculate and initiate relevant parameters\r\n  const legendXAxisTextPos = innerWidth;\r\n  const legendYAxisTextOnePos = innerHeight * 0.4;\r\n  const legendYAxisTextTwoPos = legendYAxisTextOnePos + 30;\r\n  const legendXAxisSquaresPos = innerWidth + 10;\r\n  const legendYAxisSquareOnePos = innerHeight * 0.37;\r\n  const legendYAxisSquareTwoPos = legendYAxisSquareOnePos + 30;\r\n  const legendSquaresSize = 20;\r\n\r\n  const dopingAllegationsText = \"Riders with doping allegations\";\r\n  const noDopingAllegationsText = \"No doping allegations\";\r\n\r\n  const dopingAllegationColor = \"#e83407\";\r\n  const noDopingAllegationCol = \"#07e83f\";\r\n\r\n  // Initiate a scatter plot\r\n  const scatterplot = svg\r\n    .append(\"g\")\r\n    .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\r\n\r\n  // Establish scale range\r\n  const xScale = d3\r\n    .scaleTime()\r\n    .domain([\r\n      d3.min(dataset, xValue) - xAxisPadding,\r\n      d3.max(dataset, xValue) + xAxisPadding\r\n    ])\r\n    .range([0, innerWidth]);\r\n\r\n  const yScale = d3\r\n    .scaleTime()\r\n    .domain([d3.min(dataset, yValue), d3.max(dataset, yValue)])\r\n    .range([0, innerHeight]);\r\n\r\n  // Create axes\r\n  const xAxis = d3\r\n    .axisBottom(xScale)\r\n    .tickFormat((d) => d3.timeFormat(\"%Y\")(new Date(0).setFullYear(d)))\r\n    .tickSizeOuter(0);\r\n  const yAxis = d3\r\n    .axisLeft(yScale)\r\n    .tickFormat(d3.timeFormat(\"%M:%S\"))\r\n    .tickSizeOuter(0);\r\n\r\n  scatterplot\r\n    .append(\"g\")\r\n    .attr(\"id\", \"x-axis\")\r\n    .attr(\"transform\", `translate(0, ${innerHeight})`)\r\n    .call(xAxis);\r\n\r\n  const yAxisG = scatterplot.append(\"g\").attr(\"id\", \"y-axis\").call(yAxis);\r\n\r\n  yAxisG\r\n    .append(\"text\")\r\n    .attr(\"id\", \"yAxis-label\")\r\n    .attr(\"x\", yAxisLabelXPos)\r\n    .attr(\"y\", yAxisLabelYPos)\r\n    .attr(\"transform\", \"rotate(-90)\")\r\n    .text(yAxisLabelText);\r\n\r\n  const titleSection = scatterplot.append(\"g\").attr(\"text-anchor\", \"middle\");\r\n\r\n  titleSection\r\n    .append(\"text\")\r\n    .attr(\"id\", \"title\")\r\n    .attr(\"x\", titleXAxisPos)\r\n    .attr(\"y\", titleYAxisPos)\r\n    .text(titleText);\r\n\r\n  titleSection\r\n    .append(\"text\")\r\n    .attr(\"id\", \"subtitle\")\r\n    .attr(\"x\", titleXAxisPos)\r\n    .attr(\"y\", subtitleYAxisPos)\r\n    .text(subtitleText);\r\n\r\n  const legendGrouping = scatterplot.append(\"g\").attr(\"id\", \"legend\");\r\n\r\n  legendGrouping\r\n    .append(\"text\")\r\n    .attr(\"class\", \"legend-text\")\r\n    .attr(\"x\", legendXAxisTextPos)\r\n    .attr(\"y\", legendYAxisTextOnePos)\r\n    .text(noDopingAllegationsText);\r\n\r\n  legendGrouping\r\n    .append(\"text\")\r\n    .attr(\"class\", \"legend-text\")\r\n    .attr(\"x\", legendXAxisTextPos)\r\n    .attr(\"y\", legendYAxisTextTwoPos)\r\n    .text(dopingAllegationsText);\r\n\r\n  legendGrouping\r\n    .append(\"rect\")\r\n    .attr(\"x\", legendXAxisSquaresPos)\r\n    .attr(\"y\", legendYAxisSquareOnePos)\r\n    .attr(\"width\", legendSquaresSize)\r\n    .attr(\"height\", legendSquaresSize)\r\n    .attr(\"fill\", noDopingAllegationCol);\r\n\r\n  legendGrouping\r\n    .append(\"rect\")\r\n    .attr(\"x\", legendXAxisSquaresPos)\r\n    .attr(\"y\", legendYAxisSquareTwoPos)\r\n    .attr(\"width\", legendSquaresSize)\r\n    .attr(\"height\", legendSquaresSize)\r\n    .attr(\"fill\", dopingAllegationColor);\r\n\r\n  let tooltip = d3\r\n    .select(\"body\")\r\n    .append(\"div\")\r\n    .attr(\"id\", \"tooltip\")\r\n    .style(\"opacity\", 0);\r\n\r\n  // Append the dots to the scatterplot\r\n  scatterplot\r\n    .selectAll(\"circle\")\r\n    .data(dataset)\r\n    .enter()\r\n    .append(\"circle\")\r\n    .attr(\"cx\", (d) => xScale(xValue(d)))\r\n    .attr(\"cy\", (d) => yScale(yValue(d)))\r\n    .attr(\"r\", (d) => radius)\r\n    .attr(\"class\", \"dot\")\r\n    .attr(\"data-xvalue\", (d) => xValue(d))\r\n    .attr(\"data-yvalue\", (d) => yValue(d))\r\n    .attr(\"fill\", (d) => {\r\n      if (dopingValue(d) === \"\") {\r\n        return noDopingAllegationCol;\r\n      } else {\r\n        return dopingAllegationColor;\r\n      }\r\n    })\r\n    .on(\"mouseover\", (d) => {\r\n      tooltip.transition().duration(200).style(\"opacity\", 0.9);\r\n      tooltip\r\n        .html(\r\n          `${nameValue(d)}: ${nationalityValue(d)} \r\n                      </br>Year: ${xValue(d)}, Time: ${timeValue(d)}\r\n                      </br></br>${dopingValue(d)}`\r\n        )\r\n        .style(\"left\", d3.event.pageX + \"px\")\r\n        .style(\"top\", d3.event.pageY + \"px\")\r\n        .attr(\"data-year\", xValue(d));\r\n    })\r\n    .on(\"mouseout\", (d) => {\r\n      tooltip.transition().duration(500).style(\"opacity\", 0);\r\n    });\r\n};\r\n\r\nexport { render };\r\n","import React, { useEffect, useRef } from \"react\";\nimport \"./styles/main.scss\";\n\nimport { useFetch } from \"./helpers/fetchData\";\nimport { render } from \"./helpers/chart\";\n\nexport default function App() {\n  const WIDTH = 1260;\n  const HEIGHT = 600;\n  const DATA_LINK =\n    \"https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json\";\n  const [data, loading] = useFetch(DATA_LINK);\n  const ref = useRef();\n\n  useEffect(() => {\n    if (data.length !== 0) {\n      render(data, ref, WIDTH, HEIGHT);\n    }\n  }, [loading]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"viz-container\">\n        <svg className=\"graph\" ref={ref} viewBox={`0 0 ${WIDTH} ${HEIGHT}`} />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}